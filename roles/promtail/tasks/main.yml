- name: Create application user
  ansible.builtin.user:
    name: promtail
    uid: 10600
    group: root
    create_home: false
    shell: /sbin/nologin

- name: Create config directory
  ansible.builtin.file:
    path: "{{ promtail_etc_path }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Create data directory
  ansible.builtin.file:
    path: "{{ promtail_data_path }}"
    state: directory
    owner: promtail
    group: root
    mode: 0775

- name: Create service configuration
  ansible.builtin.template:
    src: config.yml.j2
    dest: "{{ promtail_etc_path }}/config.yml"
    owner: root
    group: root
    mode: 0644
  no_log: true
  notify: Restart promtail service

- name: Define environment variables
  ansible.builtin.template:
    src: promtail.env.j2
    dest: /etc/promtail.env
    owner: root
    group: root
    mode: 0644
  notify: Restart promtail service

- name: Define Docker container labels
  ansible.builtin.template:
    src: promtail.label.j2
    dest: /etc/promtail.label
    owner: root
    group: root
    mode: 0644
  notify: Restart promtail service

- name: Pull Docker image
  community.docker.docker_image:
    name: "grafana/promtail:{{ promtail_docker_image_version }}"
    source: pull

- name: Create systemd service
  ansible.builtin.template:
    src: promtail.service.j2
    dest: /etc/systemd/system/promtail.service
    owner: root
    group: root
    mode: 0644
  notify: Restart promtail service

- name: Start service
  ansible.builtin.systemd:
    name: promtail
    state: started
    daemon_reload: true
  register: promtail_service_started

- name: Enable service
  ansible.builtin.systemd:
    name: promtail
    enabled: true
    daemon_reload: true

- name: Force all notified handlers to run at this point
  ansible.builtin.meta: flush_handlers

- name: Wait for service to become available
  ansible.builtin.uri:
    url: http://localhost:9080/ready
  register: result
  until: result.status == 200
  retries: 60
  delay: 1
