- name: Get all groups
  ansible.builtin.getent:
    database: group
    split: ':'

- name: Create application user
  ansible.builtin.user:
    name: traefik
    uid: 20000
    group: "{{ getent_group.docker[1] | default('root') }}"
    create_home: false
    shell: /sbin/nologin

- name: Create config directory
  ansible.builtin.file:
    path: "{{ traefik_etc_path }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Create data directory
  ansible.builtin.file:
    path: "{{ traefik_data_path }}"
    state: directory
    owner: traefik
    group: root
    mode: 0775

- name: Create service configuration
  ansible.builtin.template:
    src: traefik.yml.j2
    dest: "{{ traefik_etc_path }}/traefik.yml"
    owner: root
    group: root
    mode: 0644
  no_log: true
  notify: Restart traefik service

- name: Define environment variables
  ansible.builtin.template:
    src: traefik.env.j2
    dest: /etc/traefik.env
    owner: root
    group: root
    mode: 0644
  notify: Restart traefik service

- name: Define Docker container labels
  ansible.builtin.template:
    src: traefik.label.j2
    dest: /etc/traefik.label
    owner: root
    group: root
    mode: 0644
  notify: Restart traefik service

- name: Pull Docker image
  community.docker.docker_image:
    name: "traefik:{{ traefik_docker_image_version }}"
    source: pull

- name: Create systemd service
  ansible.builtin.template:
    src: traefik.service.j2
    dest: /etc/systemd/system/traefik.service
    owner: root
    group: root
    mode: 0644
  notify: Restart traefik service

- name: Start service
  ansible.builtin.systemd:
    name: traefik
    state: started
    daemon_reload: true
  register: traefik_service_started

- name: Enable service
  ansible.builtin.systemd:
    name: traefik
    enabled: true
    daemon_reload: true

- name: Force all notified handlers to run at this point
  ansible.builtin.meta: flush_handlers

- name: Wait for service to become available
  ansible.builtin.uri:
    url: http://localhost:80/
    status_code:
      - 200
      - 301
    follow_redirects: none
  register: result
  until: result.status == 200 or result.status == 301
  retries: 60
  delay: 1
