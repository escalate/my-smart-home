- name: Create application user
  ansible.builtin.user:
    name: coredns
    uid: 20100
    group: root
    create_home: false
    shell: /sbin/nologin

- name: Create config directory
  ansible.builtin.file:
    path: "{{ coredns_etc_path }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Create service configuration
  ansible.builtin.template:
    src: Corefile.j2
    dest: "{{ coredns_etc_path }}/Corefile"
    owner: root
    group: root
    mode: 0644
  no_log: true
  notify: Restart coredns service

- name: Define environment variables
  ansible.builtin.template:
    src: coredns.env.j2
    dest: /etc/coredns.env
    owner: root
    group: root
    mode: 0644
  notify: Restart coredns service

- name: Define Docker container labels
  ansible.builtin.template:
    src: coredns.label.j2
    dest: /etc/coredns.label
    owner: root
    group: root
    mode: 0644
  notify: Restart coredns service

- name: Pull Docker image
  community.docker.docker_image:
    name: "coredns/coredns:{{ coredns_docker_image_version }}"
    source: pull

- name: Create systemd service
  ansible.builtin.template:
    src: coredns.service.j2
    dest: /etc/systemd/system/coredns.service
    owner: root
    group: root
    mode: 0644
  notify: Restart coredns service

- name: Start and enable service
  ansible.builtin.systemd:
    name: coredns
    state: started
    enabled: true
    daemon_reload: true

- name: Force all notified handlers to run at this point
  meta: flush_handlers

- name: Wait for service to become available
  ansible.builtin.uri:
    url: http://localhost:5380/health
  register: result
  until: result.status == 200
  retries: 60
  delay: 1
