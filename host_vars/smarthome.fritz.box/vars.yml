common_hostname: smarthome.fritz.box

dhcpcd_static_ipv4_configuration_enabled: true
dhcpcd_static_ipv4_address: "{{ vault_dhcpcd_static_ipv4_address }}"
dhcpcd_static_ipv4_gateway: "{{ vault_dhcpcd_static_ipv4_gateway }}"
dhcpcd_static_ipv4_domain_name_server: "{{ vault_dhcpcd_static_ipv4_domain_name_server }}"

swap_enabled: false

locale_languages:
  - de_DE.UTF-8
  - en_GB.UTF-8
  - en_US.UTF-8

ssh_login_user: "{{ vault_ssh_login_user }}"
ssh_login_public_key: "{{ vault_ssh_login_public_key }}"

sshd_allow_users:
  - "{{ vault_ssh_login_user }}"

msmtp_acounts:
  - account: default
    host: smtp.ionos.de
    port: 587
    from: "{{ vault_msmtp_default_user_name }}"
    user: "{{ vault_msmtp_default_user_name }}"
    password: "{{ vault_msmtp_default_password }}"

msmtp_aliases:
  root: "{{ vault_email_address }}"
  default: "{{ vault_email_address }}"

smb_mount_list: "{{ vault_smb_mount_list }}"

# https://download.docker.com/linux/debian/dists/buster/pool/stable/arm64/
docker_version: 5:20.10.10~3-0~debian-{{ ansible_distribution_release }}
docker_containerd_version: 1.4.11-1
# https://pypi.org/project/docker/
docker_python_version: 5.0.3
docker_networks:
  - name: internal
    subnet: 172.18.0.0/16

# https://github.com/influxdata/influxdb/releases
influxdb_docker_image_version: 2.0.8
influxdb_docker_labels:
  traefik.enable: "true"
  traefik.http.routers.influxdb.rule: Host(`influxdb.clubstr.de`)
  traefik.http.routers.influxdb.entrypoints: websecure
  traefik.http.routers.influxdb.service: influxdb-service
  traefik.http.services.influxdb-service.loadbalancer.server.port: 8086
influxdb_docker_network: internal
influxdb_primary_user: "{{ vault_influxdb_primary_user }}"
influxdb_primary_user_password: "{{ vault_influxdb_primary_user_password }}"
influxdb_primary_organization_name: ClubStr
influxdb_primary_bucket_name: General
influxdb_primary_bucket_name_retention_period: 1h
influxdb_users:
  - name: grafana
    password: "{{ vault_influxdb_users_grafana_password }}"
  - name: telegraf
    password: "{{ vault_influxdb_users_telegraf_password }}"
influxdb_buckets:
  - name: Loxone MiniServer
    description: Bucket for Loxone MiniServer
    retention: 30d
  - name: Home Assistant
    description: Bucket for Home Assistant
    retention: 30d
  - name: Telegraf
    description: Bucket for Telegraf
    retention: 30d
influxdb_authorizations:
  - user: grafana
    description: grafana token with read-buckets permission
    permissions:
      - read-buckets
  - user: telegraf
    description: telegraf token with read- and write-buckets permission
    permissions:
      - read-buckets
      - write-buckets

# https://github.com/grafana/grafana/releases
grafana_docker_image_version: 8.2.1
grafana_docker_labels:
  traefik.enable: "true"
  traefik.http.routers.grafana.rule: Host(`grafana.clubstr.de`)
  traefik.http.routers.grafana.entrypoints: websecure
  traefik.http.routers.grafana.service: grafana-service
  traefik.http.services.grafana-service.loadbalancer.server.port: 3000
grafana_docker_network: internal
grafana_admin_user: "{{ vault_grafana_admin_user }}"
grafana_admin_password: "{{ vault_grafana_admin_password }}"
grafana_datasources:
  apiVersion: 1
  datasources:
    - name: InfluxDB
      type: influxdb
      access: proxy
      url: http://influxdb:8086
      jsonData:
        version: Flux
        httpMode: POST
        organization: ClubStr
        defaultBucket: General
      secureJsonData:
        token: "{{ vault_influxdb_users_grafana_token }}"
    - name: Loki
      type: loki
      access: proxy
      url: http://loki:3100

# https://github.com/home-assistant/core/releases
home_assistant_docker_image_version: 2021.10.4
home_assistant_docker_labels:
  traefik.enable: "true"
  traefik.http.routers.homeassistant.rule: Host(`homeassistant.clubstr.de`)
  traefik.http.routers.homeassistant.entrypoints: websecure
  traefik.http.routers.homeassistant.service: homeassistant-service
  traefik.http.services.homeassistant-service.loadbalancer.server.port: 8123
home_assistant_docker_network: internal
home_assistant_config:
  default_config: {}
  http:
    use_x_forwarded_for: true
    trusted_proxies: 172.18.0.0/16

# https://github.com/influxdata/telegraf/releases
telegraf_docker_image_version: 1.20.2
telegraf_docker_labels:
  traefik.enable: "true"
  # http
  traefik.http.routers.telegraf.rule: Host(`telegraf.clubstr.de`)
  traefik.http.routers.telegraf.entrypoints: websecure
  traefik.http.routers.telegraf.service: telegraf-service
  traefik.http.services.telegraf-service.loadbalancer.server.port: 8081
  # udp
  traefik.udp.routers.telegraf-udp-socket.entrypoints: telegraf-udp-socket
  traefik.udp.routers.telegraf-udp-socket.service: telegraf-udp-socket-service
  traefik.udp.services.telegraf-udp-socket-service.loadbalancer.server.port: 8094
telegraf_docker_network: internal
telegraf_config: |
  [agent]
    interval = "20s"

  # https://github.com/influxdata/telegraf/blob/release-1.19/plugins/inputs/cpu/README.md
  [[inputs.cpu]]

  # https://github.com/influxdata/telegraf/blob/release-1.19/plugins/inputs/disk/README.md
  [[inputs.disk]]

  # https://github.com/influxdata/telegraf/blob/release-1.19/plugins/inputs/diskio/README.md
  [[inputs.diskio]]

  # https://github.com/influxdata/telegraf/blob/release-1.19/plugins/inputs/http_listener_v2/README.md
  [[inputs.http_listener_v2]]
    service_address = ":8081"

  # https://github.com/influxdata/telegraf/blob/release-1.19/plugins/inputs/kernel/README.md
  [[inputs.kernel]]

  # https://github.com/influxdata/telegraf/blob/release-1.19/plugins/inputs/mem/README.md
  [[inputs.mem]]

  # https://github.com/influxdata/telegraf/blob/release-1.19/plugins/inputs/net/NET_README.md
  [[inputs.net]]

  # https://github.com/influxdata/telegraf/blob/release-1.19/plugins/inputs/processes/README.md
  [[inputs.processes]]

  # https://github.com/influxdata/telegraf/blob/release-1.19/plugins/inputs/socket_listener/README.md
  [[inputs.socket_listener]]
    service_address = "udp4://:8094"

  # https://github.com/influxdata/telegraf/blob/release-1.19/plugins/inputs/swap/README.md
  [[inputs.swap]]

  # https://github.com/influxdata/telegraf/blob/release-1.19/plugins/inputs/system/README.md
  [[inputs.system]]

  # https://github.com/influxdata/telegraf/blob/release-1.19/plugins/outputs/influxdb_v2/README.md
  [[outputs.influxdb_v2]]
    urls = ["http://influxdb:8086"]
    token = "{{ vault_influxdb_users_telegraf_token }}"
    organization = "{{ influxdb_primary_organization_name }}"
    bucket = "Loxone MiniServer"
    [outputs.influxdb_v2.tagpass]
      origin = ["loxone"]

  [[outputs.influxdb_v2]]
    urls = ["http://influxdb:8086"]
    token = "{{ vault_influxdb_users_telegraf_token }}"
    organization = "{{ influxdb_primary_organization_name }}"
    bucket = "Telegraf"
    [outputs.influxdb_v2.tagdrop]
      origin = ["loxone"]

# https://github.com/grafana/loki/releases
loki_docker_image_version: 2.3.0
loki_docker_network: internal
loki_docker_labels:
  traefik.enable: "true"
  traefik.http.routers.loki.rule: Host(`loki.clubstr.de`)
  traefik.http.routers.loki.entrypoints: websecure
  traefik.http.routers.loki.service: loki-service
  traefik.http.routers.loki.middlewares: loki-auth
  traefik.http.middlewares.loki-auth.basicauth.users: "{{ vault_traefik_loki_basic_auth_credentials }}"
  traefik.http.services.loki-service.loadbalancer.server.port: 3100

# https://github.com/grafana/loki/releases
promtail_docker_image_version: 2.3.0
promtail_docker_network: internal
promtail_docker_labels:
  traefik.enable: "true"
  traefik.http.routers.promtail.rule: Host(`promtail.clubstr.de`)
  traefik.http.routers.promtail.entrypoints: websecure
  traefik.http.routers.promtail.service: promtail-service
  traefik.http.routers.promtail.middlewares: promtail-auth
  traefik.http.middlewares.promtail-auth.basicauth.users: "{{ vault_traefik_promtail_basic_auth_credentials }}"
  traefik.http.services.promtail-service.loadbalancer.server.port: 9080

# https://github.com/traefik/traefik/releases
traefik_docker_image_version: 2.5.3
traefik_docker_labels:
  traefik.enable: "true"
  traefik.http.routers.dashboard.rule: Host(`traefik.clubstr.de`)
  traefik.http.routers.dashboard.entrypoints: websecure
  traefik.http.routers.dashboard.service: api@internal
  traefik.http.routers.dashboard.middlewares: traefik-auth
  traefik.http.middlewares.traefik-auth.basicauth.users: "{{ vault_traefik_api_basic_auth_credentials }}"
traefik_docker_network: internal
traefik_docker_publish_ports:
  # web
  - 80:80
  # websecure
  - 443:443
  # telegraf-udp-socket
  - 8094:8094/udp
traefik_config:
  global:
    checkNewVersion: false
    sendAnonymousUsage: false
  log:
    level: INFO
  accessLog: {}
  api:
    dashboard: true
  entryPoints:
    web:
      address: ":80"
      http:
        redirections:
          entryPoint:
            to: websecure
            scheme: https
    websecure:
      address: ":443"
      http:
        tls:
          certResolver: letsencryptresolver
    telegraf-udp-socket:
      address: ":8094/udp"
  certificatesResolvers:
    letsencryptresolver:
      acme:
        email: "{{ vault_email_address }}"
        storage: /etc/traefik/acme/acme.json
        # caServer: https://acme-staging-v02.api.letsencrypt.org/directory
        dnsChallenge:
          provider: cloudflare
  providers:
    docker:
      exposedByDefault: false
traefik_env_vars:
  CF_DNS_API_TOKEN: "{{ vault_traefik_env_cf_dns_api_token }}"
  CF_ZONE_API_TOKEN: "{{ vault_traefik_env_cf_zone_api_token }}"

# https://github.com/coredns/coredns/releases
coredns_docker_image_version: 1.8.6
coredns_docker_network: internal
coredns_config: |
  clubstr.de {
      hosts {
        {{ vault_coredns_config_grafana }}
        {{ vault_coredns_config_homeassistant }}
        {{ vault_coredns_config_influxdb }}
        {{ vault_coredns_config_loki }}
        {{ vault_coredns_config_promtail }}
        {{ vault_coredns_config_telegraf }}
        {{ vault_coredns_config_traefik }}
      }
      errors
  }

  . {
    forward . {{ vault_dhcpcd_static_ipv4_gateway }}
    health :5380
    errors
  }
